IF(OF_PYTHON_MODULE)
  MESSAGE(STATUS "OpenFrames enabling Python interface") 

  FIND_PACKAGE(SWIG REQUIRED)
  INCLUDE(${SWIG_USE_FILE})

  FIND_PACKAGE(PythonLibs REQUIRED)
  INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_DIR})
  LINK_DIRECTORIES(${PYTHON_LIB_DIR})

  INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../include)
  INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

  IF(NOT PYTHON_DEBUG_LIBRARY)
    # This preprocessor variable disables the automatic linking of pythonXY_d.lib to use the release version of python.lib
    ADD_DEFINITIONS(-DSWIG_PYTHON_INTERPRETER_NO_DEBUG)
    # With Visual Studio we need to turn off iterator debugging because we are linking against the release version of pythonXY.lib
    IF(MSVC)
      ADD_DEFINITIONS(-D_ITERATOR_DEBUG_LEVEL=0)
    ENDIF()
  ENDIF()

  SET(SWIG_MODULE_NAME PyOFInterfaceC)
  CONFIGURE_FILE(PyOFInterface.i PyOFInterfaceC.i)
  SET_PROPERTY(SOURCE ${CMAKE_CURRENT_BINARY_DIR}/PyOFInterfaceC.i PROPERTY CPLUSPLUS ON)
  # On windows the _WIN64 is autodefined by the compiler cl.exe when using the Win64 toolchain
  IF(${CMAKE_SIZEOF_VOID_P} EQUAL 8)
    SET_PROPERTY(SOURCE ${CMAKE_CURRENT_BINARY_DIR}/PyOFInterfaceC.i PROPERTY SWIG_FLAGS -D_WIN64 -DOF_EXPORT)
  ELSE()
    SET_PROPERTY(SOURCE ${CMAKE_CURRENT_BINARY_DIR}/PyOFInterfaceC.i PROPERTY SWIG_FLAGS -DOF_EXPORT)
  ENDIF()

  # define Python bindings target
  SWIG_ADD_LIBRARY(PyOFInterfaceC LANGUAGE python SOURCES ${CMAKE_CURRENT_BINARY_DIR}/PyOFInterfaceC.i)
  SWIG_LINK_LIBRARIES(PyOFInterfaceC ${PYTHON_LIBRARY} OpenFrames_Interface_C)
  SET_TARGET_PROPERTIES(${SWIG_MODULE_PyOFInterfaceC_REAL_NAME} PROPERTIES DEBUG_POSTFIX  "")

  IF( OF_FORTRAN_MODULE )
    SET(SWIG_MODULE_NAME PyOFInterfaceIFORT)
    CONFIGURE_FILE(PyOFInterface.i PyOFInterfaceIFORT.i)
    SET_PROPERTY(SOURCE ${CMAKE_CURRENT_BINARY_DIR}/PyOFInterfaceIFORT.i PROPERTY CPLUSPLUS ON)
    # On windows the _WIN64 is autodefined by the compiler cl.exe when using the Win64 toolchain
    IF(${CMAKE_SIZEOF_VOID_P} EQUAL 8)
      SET_PROPERTY(SOURCE ${CMAKE_CURRENT_BINARY_DIR}/PyOFInterfaceIFORT.i PROPERTY SWIG_FLAGS -D_WIN64 -DOF_EXPORT)
    ELSE()
      SET_PROPERTY(SOURCE ${CMAKE_CURRENT_BINARY_DIR}/PyOFInterfaceIFORT.i PROPERTY SWIG_FLAGS -DOF_EXPORT)
    ENDIF()
    SET_PROPERTY(SOURCE ${CMAKE_CURRENT_BINARY_DIR}/PyOFInterfaceIFORT.i APPEND PROPERTY SWIG_FLAGS -module PyOFInterfaceIFORT)

    # define Python bindings target
    SWIG_ADD_LIBRARY(PyOFInterfaceIFORT LANGUAGE python SOURCES ${CMAKE_CURRENT_BINARY_DIR}/PyOFInterfaceIFORT.i)
    SWIG_LINK_LIBRARIES(PyOFInterfaceIFORT ${PYTHON_LIBRARY} OpenFrames_Interface_IFORT)
	SET_TARGET_PROPERTIES(${SWIG_MODULE_PyOFInterfaceIFORT_REAL_NAME} PROPERTIES DEBUG_POSTFIX  "")
  ENDIF( OF_FORTRAN_MODULE )

  # Set RPATH to find shared libraries in default locations on Mac/Linux
  IF(UNIX)
    IF(APPLE)
      SET_TARGET_PROPERTIES(${SWIG_MODULE_PyOFInterfaceC_REAL_NAME} PROPERTIES INSTALL_RPATH
      "@loader_path/;@loader_path/../plugins/;@loader_path/../plugins/proprietary/"
      )
      IF( OF_FORTRAN_MODULE )
        SET_TARGET_PROPERTIES(${SWIG_MODULE_PyOFInterfaceIFORT_REAL_NAME} PROPERTIES INSTALL_RPATH
        "@loader_path/;@loader_path/../plugins/;@loader_path/../plugins/proprietary/"
        )
      ENDIF( OF_FORTRAN_MODULE )
    ELSE()
      SET_TARGET_PROPERTIES(${SWIG_MODULE_PyOFInterfaceC_REAL_NAME} PROPERTIES INSTALL_RPATH
      "\$ORIGIN/;\$ORIGIN/../plugins/;\$ORIGIN/../plugins/proprietary/"
      )
      IF( OF_FORTRAN_MODULE )
        SET_TARGET_PROPERTIES(${SWIG_MODULE_PyOFInterfaceIFORT_REAL_NAME} PROPERTIES INSTALL_RPATH
        "\$ORIGIN/;\$ORIGIN/../plugins/;\$ORIGIN/../plugins/proprietary/"
        )
      ENDIF( OF_FORTRAN_MODULE )
    ENDIF()
  ENDIF()

  IF(WIN32)
    INSTALL(TARGETS ${SWIG_MODULE_PyOFInterfaceC_REAL_NAME} LIBRARY DESTINATION bin/OpenFrames)
    INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/PyOFInterfaceC.py DESTINATION bin/OpenFrames)
    IF( OF_FORTRAN_MODULE )
      INSTALL(TARGETS ${SWIG_MODULE_PyOFInterfaceIFORT_REAL_NAME} LIBRARY DESTINATION bin/OpenFrames)
      INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/PyOFInterfaceIFORT.py DESTINATION bin/OpenFrames)
    ENDIF( OF_FORTRAN_MODULE )
  ELSE()
    # dump at bin, python modules need to execute from GmatBase for now
    SET(INSTALL_DIR bin/OpenFrames)
    INSTALL(TARGETS ${SWIG_MODULE_PyOFInterfaceC_REAL_NAME} LIBRARY DESTINATION ${INSTALL_DIR})
    INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/PyOFInterfaceC.py DESTINATION ${INSTALL_DIR})
    IF( OF_FORTRAN_MODULE )
      INSTALL(TARGETS ${SWIG_MODULE_PyOFInterfaceIFORT_REAL_NAME} LIBRARY DESTINATION ${INSTALL_DIR})
      INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/PyOFInterfaceIFORT.py DESTINATION ${INSTALL_DIR})
    ENDIF( OF_FORTRAN_MODULE )
  ENDIF()
ENDIF()
